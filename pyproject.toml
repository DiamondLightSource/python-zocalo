[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "zocalo"
version = "1.3.0"
description = "Infrastructure components for automated data processing at Diamond Light Source"
authors = [{ name = "Nicholas Devenish", email = "ndevenish@gmail.com" }]
requires-python = ">=3.11"
readme = "README.rst"
dependencies = [
    "pyyaml",
    "graypy",
    "marshmallow",
    "requests",
    "pydantic>=2,<3",
    "workflows>=3.0",
]

[dependency-groups]
dev = [
    "pytest>=8.2.2",
    "pytest-mock>=3.14",
    "pytest-cov>=5",
    "requests-mock>=1.12",
]
docs = ["sphinx>=6,<7", "sphinx-rtd-theme~=1.2"]


[project.urls]
Bug-Tracker = "https://github.com/DiamondLightSource/python-zocalo/issues"
Changelog = "https://github.com/DiamondLightSource/python-zocalo/blob/main/HISTORY.rst"
Documentation = "https://github.com/DiamondLightSource/python-zocalo"
Download = "https://github.com/DiamondLightSource/python-zocalo/releases"
GitHub = "https://github.com/DiamondLightSource/python-zocalo"

[project.scripts]
"zocalo.configure_rabbitmq" = "zocalo.cli.configure_rabbitmq:run"
"zocalo.dlq_check" = "zocalo.cli.dlq_check:run"
"zocalo.dlq_purge" = "zocalo.cli.dlq_purge:run"
"zocalo.dlq_reinject" = "zocalo.cli.dlq_reinject:run"
"zocalo.go" = "zocalo.cli.go:run"
"zocalo.pickup" = "zocalo.cli.pickup:run"
"zocalo.queue_drain" = "zocalo.cli.queue_drain:run"
"zocalo.service" = "zocalo.service:start_service"
"zocalo.shutdown" = "zocalo.cli.shutdown:run"
"zocalo.wrap" = "zocalo.cli.wrap:run"

[project.entry-points."libtbx.precommit"]
zocalo = "zocalo"

[project.entry-points."zocalo.wrappers"]
dummy = "zocalo.wrapper:DummyWrapper"

[project.entry-points."libtbx.dispatcher.script"]
"zocalo.configure_rabbitmq" = "zocalo.configure_rabbitmq"
"zocalo.dlq_check" = "zocalo.dlq_check"
"zocalo.dlq_purge" = "zocalo.dlq_purge"
"zocalo.dlq_reinject" = "zocalo.dlq_reinject"
"zocalo.go" = "zocalo.go"
"zocalo.queue_drain" = "zocalo.queue_drain"
"zocalo.service" = "zocalo.service"
"zocalo.shutdown" = "zocalo.shutdown"
"zocalo.wrap" = "zocalo.wrap"

[project.entry-points."workflows.services"]
Dispatcher = "zocalo.service.dispatcher:Dispatcher"
JSONLines = "zocalo.service.jsonlines:JSONLines"
Mailer = "zocalo.service.mailer:Mailer"
Schlockmeister = "zocalo.service.schlockmeister:Schlockmeister"

[project.entry-points."zocalo.configuration.plugins"]
graylog = "zocalo.configuration.plugin_graylog:Graylog"
jmx = "zocalo.configuration.plugin_jmx:JMX"
logging = "zocalo.configuration.plugin_logging:Logging"
rabbitmqapi = "zocalo.configuration.plugin_rabbitmqapi:RabbitAPI"
slurm = "zocalo.configuration.plugin_slurm:Slurm"
iris = "zocalo.configuration.plugin_slurm:Slurm"
smtp = "zocalo.configuration.plugin_smtp:SMTP"
storage = "zocalo.configuration.plugin_storage:Storage"

[tool.uv]
default-groups = ["dev", "docs"]

[tool.pytest.ini_options]
required_plugins = "pytest-mock requests-mock"
testpaths = ["tests"]

[tool.ruff.lint]
ignore = ["E501", "E741"]
select = ["C4", "E", "F", "W", "I"]
unfixable = ["F841"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"src/zocalo/util/slurm/models.py" = ["W"]

[tool.mypy]
mypy_path = "src"

[[tool.mypy.overrides]]
module = ["graypy", "graypy.handler"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["zocalo.util.slurm.models"]
ignore_errors = true

[tool.bumpversion]
current_version = "1.3.0"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = 'src/zocalo/__init__.py'
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "docs/conf.py"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'
